#include <iostream>
using namespace std;
/*
	const修饰成员函数（常函数）：
	常函数：
		-成员函数后加const后我们称之为常函数
		-常函数内不可以修改成员属性
		-成员属性声明时加关键字mutable后，在常函数中依然可以修改
	常对象：
		-声明对象前加const称该对象为常对象
		-常对象只能调用常函数；
*/
//常函数：
class Person04 {
public:
	//在成员函数后面加上const，修饰的是this指针，让指针指向的值也不可以修改
	void showPerson() const
	{
		//this指针的本质是指针常量，指针的指向是不可修改的
		//this->m_A = 100;
		this->m_B = 100;
	}
	void show() {
		m_B = 100;
		cout << "fcneuwibfuowiq" << endl;
	}
	int m_A;
	mutable int m_B;//特殊变量，即使在常函数中，也可以修改这个值，加关键字mutable

};
//常对象
void test04_1() {
	const Person04 p;//常对象
	//p.m_A = 100;
	p.m_B = 100;

	//常对象只能调用常函数
	p.showPerson();
	//p.show();常对象不可以调用普通成员函数，因为普通成员函数可以修改属性

}
void test04() {
	Person04 p;
	p.showPerson();
}
int main() {
	system("pause");
	return 0;
}