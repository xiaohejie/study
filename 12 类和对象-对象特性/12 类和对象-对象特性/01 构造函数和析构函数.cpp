#include <iostream>
using namespace std;
/*
	构造函数和析构函数：
		C++利用构造函数和析构函数，这两个函数会被编译器自动调用，完成对象的初始化和清理工作。
		对象的初始化和清理工作是编译器强制我们要做的事情，因此如果我们不提供构造和析构，编译
	器会提供，编译器提供的构造函数和析构函数是空实现。
		
		构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用
		析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作。
*/
/*
	构造函数语法：类名(){}
		1、构造函数，没有返回值也不写void
		2、函数名称与类名相同
		3、构造函数可以有参数，因此可以发生重载
		4、程序在调用对象时会自动调用构造函数，无需手动调用，而且只会调用一次	
*/
/*
	析构函数语法：~类名(){}
		1、析构函数，没有返回值也不写void
		2、函数名称与类名相同，在名称前加上~
		3、析构函数没有参数，因此不可以发生重载
		4、程序在对象销毁前会自动调用析构函数，无需手动调用，而且只会调用一次
*/
class Person1
{
public:
	Person1() {
		cout << "Person的构造函数调用" << endl;
	}//构造函数
	~Person1() {
		cout << "Person的析构函数调用" << endl;
	}//析构函数

private:

};
void test2() {
	Person1 p;//在栈上的数据，test1执行完成后，就会释放这个对象
}
int main1() {
	test2();

	cout << "**************" << endl;
	Person1 p;
	system("pause");
	return 0;
}